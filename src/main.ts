import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { ValidationPipe } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const configService = app.get(ConfigService);

  // Í∏ÄÎ°úÎ≤å Ï†ëÎëêÏÇ¨ ÏÑ§Ï†ï (API Î≤ÑÏ†Ñ Í¥ÄÎ¶¨)
  const apiPrefix = configService.get<string>('API_PREFIX', 'api/v1');
  app.setGlobalPrefix(apiPrefix);

  // Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨ ÌååÏù¥ÌîÑ ÏÑ§Ï†ï
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
    }),
  );

  // CORS ÏÑ§Ï†ï
  app.enableCors({
    origin: configService.get<string>('CORS_ORIGIN', '*'),
  });

  // Swagger ÏÑ§Ï†ï
  const swaggerTitle = configService.get<string>(
    'SWAGGER_TITLE',
    'SNU Healthing You API',
  );
  const swaggerDescription = configService.get<string>(
    'SWAGGER_DESCRIPTION',
    'SNU Healthing You API Î¨∏ÏÑú',
  );
  const swaggerPath = configService.get<string>('SWAGGER_PATH', 'api/docs');

  const config = new DocumentBuilder()
    .setTitle(swaggerTitle)
    .setDescription(swaggerDescription)
    .setVersion(configService.get<string>('API_VERSION', '1.0'))
    .addTag('health')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup(swaggerPath, app, document, {
    swaggerOptions: {
      persistAuthorization: true,
    },
  });

  const port = configService.get<number>('PORT', 3000);
  await app.listen(port);
  console.log(`üöÄ Application is running on: http://localhost:${port}`);
  console.log(
    `üìö Swagger documentation: http://localhost:${port}/${swaggerPath}`,
  );
}
bootstrap();
