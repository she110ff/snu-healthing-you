// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------------------------------
// 1. 핵심 사용자 및 회원가입 모델
// -------------------------------------------
model User {
  id               String          @id @default(uuid())
  email            String          @unique
  password         String
  name             String?
  role             String          @default("USER") // USER, ADMIN
  emailVerified    Boolean         @default(false)
  approvedByAdmin  Boolean         @default(false)
  approvedAt       DateTime?
  approvedById     String?
  approvedBy       User?           @relation("UserApprovals", fields: [approvedById], references: [id])
  approvedUsers    User[]          @relation("UserApprovals")
  dateOfBirth      DateTime?       // 생년월일
  gender           String?         // 성별 (MALE, FEMALE 등)
  height           Float?          // 키 (cm)
  weight           Float?          // 몸무게 (kg)
  sido             String?         // 시도
  guGun            String?         // 구군
  healthCheckups   HealthCheckup[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  deletedAt        DateTime?

  @@map("users")
}

// 이메일 인증 모델
model EmailVerification {
  id         String    @id @default(uuid())
  email      String    @unique
  code       String    // 해시된 인증코드
  expiresAt  DateTime
  verifiedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("email_verifications")
}

// -------------------------------------------
// 2. 기관, 정책, 미션 모델 (어드민 관리)
// -------------------------------------------

model InstitutionConfig {
  id                         String  @id @default(uuid())
  name                       String  @unique // "서울대학교"
  emailForm                  String  @unique // "snu.ac.kr"
  contactPersonName          String? // 담당자명
  contactPersonPhone         String? // 담당자 연락처
  contactPersonEmail         String? // 담당자 이메일
  businessRegistrationNumber String? // 사업자등록번호
  pointPoolTotal             BigInt
  pointPoolRemaining         BigInt
  pointLimitPerUser          Int // 개인별 월간 포인트 지급 한도
  affiliationCodes           Json // [{"code": "SNU01", "name": "교원"}, ...]

  @@map("institution_configs")
}

// -------------------------------------------
// 3. 건강검진, 추가질문-질환/헬스스캐닝 모델 (온보딩)
// -------------------------------------------
// 건강검진 모델
model HealthCheckup {
  id                    String    @id @default(uuid())
  userId                String
  user                  User      @relation(fields: [userId], references: [id])
  checkupDate           DateTime? // 건강 검진일
  bmi                   Float?    // 1. 체질량지수 (BMI)
  waistCircumference    Float?    // 2. 허리둘레 (cm)
  systolicBloodPressure Int?      // 3. 수축기 혈압
  diastolicBloodPressure Int?     // 3. 이완기 혈압
  totalCholesterol      Int?      // 4. 총 콜레스테롤 (mg/dL)
  hdlCholesterol        Int?      // 5. HDL 고밀도 지단백 (mg/dL) - 좋은 콜레스테롤
  ldlCholesterol        Int?      // 6. LDL 저밀도 지단백 (mg/dL) - 나쁜 콜레스테롤
  triglycerides         Int?      // 7. 중성지방 트리글리세라이드 (mg/dL)
  hemoglobin            Float?    // 8. 혈색소 (g/dL)
  ast                   Int?      // 9. AST (GOT) - 간, 근육 등 손상 시 상승
  alt                   Int?      // 10. ALT (GPT) - 간 손상 시 상승
  serumCreatinine       Float?    // 11. 혈청크레아티닌 (mg/dL) - 신장 기능 저하 시 상승
  glomerularFiltrationRate Float? // 12. 신사구체여과율 (mL/min) - GFR, 신장 기능 저하 시 저하
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  
  @@map("health_checkups")
}


